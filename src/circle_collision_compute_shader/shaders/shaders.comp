#version 450

layout (local_size_x = 64) in;

// Binding 0 : Position storage buffer
layout(binding = 0) buffer Pos 
{
	vec2 positions[];
};

// Binding 1 : Scales storage buffer
layout(binding = 1) readonly buffer Scales 
{
	float scales[];
};

// Binding 2 : Velocities storage buffer
layout(binding = 2) buffer Vel
{
	vec2 velocities[];
};

layout (binding = 3) uniform UBO 
{
	float dt;
	int count;
} ubo;

void main() 
{
	uint index = gl_GlobalInvocationID.x;
    if (index >= ubo.count) 
		return;

	positions[index] += velocities[index] * ubo.dt;
}

